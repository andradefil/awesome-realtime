
version: '2.4'
services:
  sns:
    image: s12v/sns
    ports:
    - "9911:9911"
    volumes:
    - ./sns/db.json:/etc/sns/db.json
    depends_on:
      sqs:
        condition: service_healthy
  sqs:
    image: roribio16/alpine-sqs
    ports:
      - 9324:9324
      - 9325:9325 #SQS Queue Dashboard
    volumes:
      - ./sqs/elasticmq.conf:/opt/custom/elasticmq.conf
    healthcheck:
      test: "wget localhost:9325 -q -O - > /dev/null 2>&1"
      interval: 5s
      timeout: 2s
      retries: 3
  # kafka-cluster:
  #   image: landoop/fast-data-dev:cp3.3.0
  #   environment:
  #     ADV_HOST: kafka-cluster        # Change to 192.168.99.100 if using Docker Toolbox
  #     RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
  #     AWS_ACCESS_KEY_ID: foo      # AWS Dummy Access Key
  #     AWS_SECRET_KEY: bar         # AWS Dummy Secret Key
  #   ports:
  #     - 2181:2181                 # Zookeeper
  #     - 3030:3030                 # Landoop UI
  #     - 8081-8083:8081-8083       # REST Proxy, Schema Registry, Kafka Connect ports
  #     - 9581-9585:9581-9585       # JMX Ports
  #     - 9092:9092                 # Kafka Broker
  #   volumes:
  #     - ./kafka-connectors/jars:/connectors
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka:5.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  ksqldb-server:
    image: confluentinc/ksqldb-server:0.8.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    volumes:
      - ./ksqldb/connect-standalone.properties:/etc/ksqldb/connect-standalone.properties
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_WORKER_CONFIG: '/etc/ksqldb/connect-standalone.properties'
    depends_on:
      - broker